version: 40
properties:
- name: deps_core_version
  value: master/v0.1.2
  archived: false
- name: deps_extensions_version
  value: master/v0.1.2
  archived: false
- name: deps_caching_version
  value: develop/HEAD
  archived: false

jobs:
- name: Git Mirror Push
  steps:
  - !PushRepository
    name: Github push sync
    remoteUrl: https://github.com/VnUgE/Plugins.Essentials.git
    userName: VnUgE
    passwordSecret: github-access-token
    force: false
    condition: SUCCESSFUL
    optional: false
  - !PushRepository
    name: Codeberg push sync
    remoteUrl: https://codeberg.org/VnUgE/Plugins.Essentials.git
    userName: VnUgE
    passwordSecret: codeberg-access-token
    force: true
    condition: SUCCESSFUL
    optional: false
  triggers:
  - !TagCreateTrigger {}
  - !BranchUpdateTrigger {}
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600

- name: Unit Testing
  jobExecutor: windows
  steps:
  - !UseTemplateStep
    name: checkout deps
    templateName: checkout deps
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: dev-init core
    runInContainer: false
    interpreter: !DefaultInterpreter
      commands: |
        cd core
        task -t Module.Taskfile.yaml dev-init
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: run unit tests
    runInContainer: false
    interpreter: !DefaultInterpreter
      commands: |
        cd @project_name@
        vnbuild test --include @project_name@
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  triggers:
  - !BranchUpdateTrigger
    branches: '** -master'
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 14400

- name: Staging build
  jobExecutor: windows
  steps:
  - !UseTemplateStep
    name: checkout deps
    templateName: checkout deps
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: mock build
    runInContainer: false
    interpreter: !DefaultInterpreter
      commands: |
        vnbuild build --no-delay --include @project_name@ --verbose
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: mock publish
    runInContainer: false
    interpreter: !DefaultInterpreter
      commands: |
        vnbuild publish -i @project_name@
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  triggers:
  - !BranchUpdateTrigger
    branches: develop
  jobDependencies:
  - jobName: Unit Testing
    requireSuccessful: true
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 14400

- name: Publish master
  jobExecutor: publish-agents
  steps:
  - !UseTemplateStep
    name: checkout deps
    templateName: checkout deps
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: create git tag
    runInContainer: false
    interpreter: !DefaultInterpreter
      commands: |
        cd @project_name@
        task -t Module.Taskfile.yaml tag-current-commit
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: VNBuild build
    runInContainer: false
    interpreter: !DefaultInterpreter
      commands: |
        vnbuild build --no-delay --include @project_name@
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  - !CommandStep
    name: VNBuild publish
    runInContainer: false
    interpreter: !DefaultInterpreter
      commands: |
        vnbuild publish -i @project_name@ --ftp "@secret:ftp_server_address@" --sign
    envVars:
    - name: FTP_USERNAME
      value: '@secret:ftp_username@'
    - name: FTP_PASSWORD
      value: '@secret:ftp_password@'
    useTTY: true
    condition: SUCCESSFUL
    optional: false
  triggers:
  - !BranchUpdateTrigger
    branches: master
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 14400
stepTemplates:
- name: checkout deps
  steps:
  - !CommandStep
    name: checkout local deps
    runInContainer: false
    interpreter: !DefaultInterpreter
      commands: |
        git clone @server_url@/@project_path@ --branch @branch@ @project_name@
        task -t @project_name@/Module.Taskfile.yaml configure-dep "DEP_REPO=@server_url@/vnuge/vnlib/VNLib.Core" "DEP_REVISION=@property:deps_core_version@" "DEP_DIR=core"
        task -t @project_name@/Module.Taskfile.yaml configure-dep "DEP_REPO=@server_url@/vnuge/vnlib/VNLib.Data.Caching" "DEP_REVISION=@property:deps_caching_version@"
        task -t @project_name@/Module.Taskfile.yaml configure-dep "DEP_REPO=@server_url@/vnuge/vnlib/VNLib.Plugins.Extensions" "DEP_REVISION=@property:deps_extensions_version@"       
    useTTY: true
    condition: SUCCESSFUL
    optional: false